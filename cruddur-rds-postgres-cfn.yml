AWSTemplateFormatVersion: "2010-09-09"

Description: Cruddur RDS Postgres CFN

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - Label:
          default: "RDS Parameters"
        Parameters:
          - DBInstanceId
          - DBName
          - DBMasterUsername
          - DBMasterPassword
          - DBInstanceClass
          - DBStorageSize
          - DBStorageType
          - DBEngineVersion
          - DBPort
          - VpcId
          - SubnetId
          - AvailabilityZone
          - EnableStorageEncryption
          - EnableMultiAZ
          - EnablePublicAccess
      - Label:
          default: "Security Group Parameters"
        Parameters:
          - SGProtocol
          - SGFromPort
          - SGToPort
          - SGCidrIp

Parameters:
  DBInstanceId:
    Type: String
    MinLength: '1'
    MaxLength: '63'
    Description: Database Instance ID
    Default: cruddur-db-instance
  DBName:
    Type: String
    MinLength: '1'
    MaxLength: '63'
    Description: Database Instance Name
    Default: cruddur
  DBMasterUsername:
    NoEcho: 'true'
    Type: String
    MinLength: '1'
    MaxLength: '16'
    Description: Database Master Username
  DBMasterPassword:
    NoEcho: 'true'
    Type: String
    MinLength: '8'
    MaxLength: '41'
    Description: Database Master Password
  DBInstanceClass:
    Type: String
    AllowedValues: [db.t3.micro,db.t4g.micro]
    Default: db.t3.micro
  DBStorageSize:
    Type: String
    Default: 20
  DBStorageType:
    Type: String
    Default: gp2
  DBEngineVersion:
    Type: String
    AllowedValues: [14.5,14.6,14.7,15.2]
    Default: 14.6
  DBPort:
    Type: String
    Default: 5432
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select an existing VPC
  SubnetId:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select existing subnet(s) for RDS
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Select an existing Availability Zone
  EnableStorageEncryption:
    Type: String
    Description: Enable storage encryption
    AllowedValues: [true,false]
    Default: false
  EnableMultiAZ:
    Type: String
    Description: Create a multi-AZ Amazon RDS database instance
    AllowedValues: [true,false]
    Default: false
  EnablePublicAccess:
    Type: String
    Description: Enable public access
    AllowedValues: [true,false]
    Default: true

  SGProtocol:
    Type: String
    Default: tcp
  SGFromPort:
    Type: Number
    Default: 5432
  SGToPort:
    Type: Number
    Default: 5432
  SGCidrIp:
    Type: String
    Default: 1.1.1.1/32

Resources:
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow incoming traffic to PostgreSQL
      SecurityGroupIngress:
        - IpProtocol: !Ref SGProtocol
          FromPort: !Ref SGFromPort
          ToPort: !Ref SGToPort
          CidrIp: !Ref SGCidrIp

  RDSInstance:
    Type: AWS::RDS::DBInstance # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceId
      DBName: !Ref DBName
      DBInstanceClass: !Ref DBInstanceClass
      Engine: postgres
      EngineVersion: !Ref DBEngineVersion
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterPassword
      Port: !Ref DBPort
      StorageType: !Ref DBStorageType
      AllocatedStorage: !Ref DBStorageSize
      StorageEncrypted: !Ref EnableStorageEncryption
      BackupRetentionPeriod: 0
      MultiAZ: !Ref EnableMultiAZ
      AvailabilityZone: !Ref AvailabilityZone
      PubliclyAccessible: !Ref EnablePublicAccess
      VPCSecurityGroups: [!GetAtt DBEC2SecurityGroup.GroupId]

Outputs:
  DatabaseSecurityGroupId:
    Value: !Ref DBEC2SecurityGroup
    Description: Security Group Id
  DatabaseInstanceId:
    Value: !Ref RDSInstance
    Description: Database InstanceId
  DatabaseName:
    Value: !Ref DBName
    Description: Database Name
  DatabaseMasterUsername:
    Value: !Ref DBMasterUsername
    Description: Database master username
  DatabaseMasterPassword:
    Value: !Ref DBMasterPassword
    Description: Database master password
  DatabaseEndpoint:
    Description: Database connection endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
  DatabasePort:
    Description: Database port
    Value: !Ref DBPort
  DatabaseConnectionURI:
    Description: Database connection URI
    Value: !Join [ "", ["postgresql://", !Ref DBMasterUsername, ":", !Ref DBMasterPassword, "@", !GetAtt RDSInstance.Endpoint.Address, ":", !Ref DBPort, "/", !Ref DBName]]
    Export:
      Name: !Sub "${AWS::StackName}-prod-connection-uri"